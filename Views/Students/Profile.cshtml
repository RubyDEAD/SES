@model SES.Models.ViewModels.StudentProfileVm
@{
    ViewData["Title"] = "Student Profile";
}

<h2>@Model.LastName, @Model.FirstName</h2>
<p>Since: @Model.Since.ToShortDateString()</p>

<h4>Enrolled courses (@Model.Courses.Count)</h4>

@if (Model.Courses.Count == 0)
{
    <p>No course enrollments yet. <a asp-controller="Enrollments" asp-action="Index">Browse available courses</a></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Course</th>
                <th>Credits</th>
                <th>Grade</th>
                <th>Enrolled Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var c in Model.Courses)
        {
            <tr data-course-id="@c.CourseId">
                <td>@c.Title</td>
                <td>@c.Credits</td>
                <td>@(c.Grade.HasValue ? c.Grade.Value.ToString("0.0") : "In Progress")</td>
                <td>@c.EnrolledOn.ToShortDateString()</td>
                <td>
                    @if (!c.Grade.HasValue)
                    {
                        <button class="btn btn-sm btn-outline-danger unenroll-btn" 
                                data-course-id="@c.CourseId" 
                                data-course-title="@c.Title">
                            Drop
                        </button>
                    }
                    else
                    {
                        <span class="badge bg-success">Completed</span>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
    
    <div class="mt-3">
        <a asp-controller="Enrollments" asp-action="Index" class="btn btn-primary">
            Enroll in More Courses
        </a>
    </div>
}

<!-- Hidden form to generate antiforgery token for unenroll -->
<form method="post" asp-antiforgery="true" style="display:none">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
<script>
(function () {
    const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
    const token = tokenInput ? tokenInput.value : null;

    // Unenroll functionality from profile page
    document.querySelectorAll('.unenroll-btn').forEach(btn => {
        btn.addEventListener('click', async function () {
            const courseIdStr = this.getAttribute('data-course-id');
            const courseTitle = this.getAttribute('data-course-title');
            const courseId = Number(courseIdStr);

            if (!confirm(`Are you sure you want to drop "${courseTitle}"?`)) {
                return;
            }

            if (!token) { 
                alert('Missing anti-forgery token.'); 
                return; 
            }
            if (!Number.isFinite(courseId)) { 
                alert('Invalid course ID.'); 
                return; 
            }

            try {
                const response = await fetch('/Enrollments/Unenroll', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify({ courseId })
                });

                if (response.ok) {
                    // Remove the row from the table
                    const row = document.querySelector(`tr[data-course-id="${courseIdStr}"]`);
                    if (row) {
                        row.remove();
                        // Update course count
                        const countElement = document.querySelector('h4');
                        const currentCount = document.querySelectorAll('tbody tr').length;
                        countElement.textContent = `Enrolled courses (${currentCount})`;
                        
                        // Show "no courses" message if no enrollments left
                        if (currentCount === 0) {
                            const tbody = document.querySelector('tbody');
                            tbody.innerHTML = '<tr><td colspan="5">No course enrollments yet. <a href="/Enrollments">Browse available courses</a></td></tr>';
                        }
                    }
                } else {
                    const text = await response.text();
                    alert(text || 'Unable to drop course.');
                }
            } catch {
                alert('Network error.');
            }
        });
    });
})();
</script>
}
